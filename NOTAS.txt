# TODO
- Encriptar refreshtoken.
- Auth: Añadir explicación completa en Readme.
- Comprobar TODOs
- Mirar error handling global
  express-async-errors: "To catch all async errors"
- Reestructurar, meter en src. Redefinir paths de Sequelize

- Reseteo contraseña
https://dev.to/cyberwolves/how-to-implement-password-reset-via-email-in-node-js-132m
https://blog.logrocket.com/implementing-secure-password-reset-node-js/#folder-structure-files
https://codevoweb.com/crud-api-node-prisma-postgresql-reset-password/
=> Template: handlebars 


# NOTAS:
- Envs: guardando variables/credenciales en .env (package dotenv)
  models > index.js carga los datos del entorno segun config.js que obtiene las variables de .env

- Auth (Use de accessToken + refreshToken)

- Dates
  - Dates en Base de datos guardados en UTC. Manejar en back o incluso en front.
      Para cambiar timezone en BBDD: C:\ProgramData\MySQL\MySQL Server 8.0\my.ini
      Bloc notas como admin y añadir: default_time_zone = +1:00
  - date-fns + date-fns-tz instalados y no utlizados por ahora.
  - String => console.log("New Date - ", new Date().toLocaleString("es-ES", { timeZone: "Europe/Madrid" }));

- Usando server nodemon: npm run dev => http://localhost:3000/api



# CMDS SEQUELIZE:
- Crear modelos + migracion
  sequelize model:create --name usuario --attributes nombre:string,email:string
- Crear migracion
  sequelize migration:generate --name create-usuario  
- Crear seed
  sequelize seed:generate --name seed-usuarios
- Ejecutar migraciones
  sequelize db:migrate 
- Deshacer la ultima migraciones // todas
  sequelize db:migrate:undo // db:migrate:undo:all
- Ejectuar seeds
  sequelize db:seed:all  // db:seed:undo:all

Sequelize findAndCountAll() => Resultados paginados + numero total

Sequelize genera funciones en las relaciones: token.getUsuario() => devuelve el usuario relacionado con el token


# ENLACES ÚTILES:
https://sequelize.org/docs/v6/core-concepts/model-basics/
https://www.bezkoder.com/jwt-refresh-token-node-js/